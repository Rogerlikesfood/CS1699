Software Quality Assurance - Fall 2014

26 AUG. Introduction - What is Software Testing?
  a. What it is not – catching every single bug
  b. Verification vs Validation
  c. QA vs QC
  d. What is a bug, really?

28 JAN. Testing Basics
  a. Equivalence classes
  b. Base cases, edge cases,  success cases, failure cases
  c. White / Black / Grey Box testing
  d. Static vs Dynamic Testing

2 SEP. Requirements Development and Testing
  a. Testability
  b. Functional Requirements
  c. Non-Functional (-ility) Requirements
    i. Scalability, reliability, usability, etc.
    ii. Special focus on whether or not it’s testable
  d. Traceability Matrices

4 SEP. Test Plans
  a. Developing a test plan
  b. Executing a test plan -> test runs
  c. Test plan/run tracking
  d. Tying defects to test runs

9 SEP. Defects
  a. Reporting a defect
    i. Expected behavior vs observed behavior
    ii. Descriptiveness
    iii. Reproducibility, etc.
  b. Tracking, Triaging and Prioritizing Defects

11 SEP. Automated and Manual Testing
  a. Benefits of manual vs automated testing
  b. Overview of tools used for automated testing (xUnit, rspec, Cucumber, STAF/STAX, etc.)
  c. Concepts of writing automated tests
    i. Minimize external dependencies
    ii. Minimize randomness
    iii. Expected vs observed behavior
  DUE: DELIVERABLE 1 (15% of grade)

16 SEP. Writing Unit Tests
  a. Unit test framework overview
  b. Execution Steps
  c. Assertions
  d. Examples
  c. Ensuring that tests are testing what you think they are testing
  d. Examples

18 SEP. Advanced Unit Testing
  a. Stubbing and verification
  b. Mocking
  c. Unit test structure
  d. Code coverage

23 SEP. Test-driven Development
  a. Concepts
   i. Red-Green-Refactor
   ii. Minimal code to pass tests
   iii. Increase tests to specify behavior
  b. Benefits and Drawbacks
  c. Examples

25 SEP. Special Topics: Interacting with Stakeholders
  a. Who should be involved in stakeholder meetings?  Why?
  b. Reporting to management/other engineers/users/etc.
  c. Clarification of user requirements

30 SEP. Interacting with Stakeholders, Part II
  a. Integrating Theory and Practice
  b. Managers, Developers, Testers

2 OCT. Behavior-Driven Development
  a. Understanding user's needs
  b. Big Picture
  c. Introduction to Cucumber and the Gherkin language
DUE: DELIVERABLE 2 (15% of grade)

7 OCT. Writing Acceptance Tests for Behavior-Driven Development
  a. Using Gherkin with Cucumber
  b. Developing step definitions for Cucumber tests
ASSIGNED: DELIVERABLE 3

9 OCT. An Overview of Version Control with Git
  + Preparation for midterm

14 OCT. NO CLASS - FALL BREAK

16 OCT. MID-TERM (20% of grade)

21 OCT. Web Testing with Selenium
   a. What Selenium is
   b. How to test websites and web applications
   c. Examples

23 OCT. Automated Web Testing with Selenium and Cucumber
   a. Integrating BDD with Web Testing
   b. Using Selenium with Cucumber

28 OCT 17 MAR. Pairwise and Combinatorial Testing
DUE: DELIVERABLE 3 (15% of grade)

30 OCT. Property-Based Testing & Formal Verification
   a. Theory of property-based testing
   b. Overview of QuickCheck and writing property-based tests
   c. An overview of formal verification
   d. Pros and cons of each kind of testing
ASSIGNED: FINAL DELIVERABLE

4 NOV. Exploratory, Smoke, Stochastic, and Red Routes Testing
   a. Definitions
   b. Their place in the software testing process

6 NOV. Performance Testing
  a. Load/stress testing
  b. Timing
  c. Resource usage
  d. Key Performance Indicators (KPI)
  e. Tools - JProfiler, perfmon, etc.

11 NOV. Performance Testing, cont'd
  a. Scaling
  b. Modeling
  c. Writing and testing performance requirements
  d. Special difficulties (e.g., testing performance before functionality complete)

13 NOV. Writing Testable Code
  a. SOLID principles
  b. Law of Demeter
  c. Why testable code tends to be "good code"

18 NOV. Usability Testing
  a. How to define "usability"?
  b. Human-centered design

20 NOV. Security Testing
  a. Information Security
  b. Kinds of attacks
  c. Penetration testing
  d. Security audits and security planning

25 NOV. Security Testing, Part II

Week 15: ON BEING A TESTER
2 DEC. Special Topics: Testing as a Career
  a. Quality Analyst
  b. Software Engineer in Test
  c. Test Manager
  d. How to be a good tester
  e. Soft skills
  f. How does software testing compare to traditional software engineering?
+ Review for Final
DUE: FINAL DELIVERABLE (25% of grade)

4 DEC. CUMULATIVE FINAL (15% of grade)
